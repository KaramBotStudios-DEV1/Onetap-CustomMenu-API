function Menu(e,n,o,l){Render.GradientRect(e,n,o-90,l+4,1,[52,100,235,255],[52,100,235,0]),Render.FilledRect(e,n+2,o,l,[0,0,0,255]),Render.GradientRect(e-6,n,6,l+4,1,[52,100,235,0],[52,100,235,255])}const Clicked_Event=function(e,n,o,l,r){return e[0]>n&&e[1]>o&&e[0]<l&&e[1]<r},getvalue=function(e){return UI.GetValue("Script items",e)};function setvalue(e,n){UI.SetValue("MISC","JAVASCRIPT","Script items",e,n)}function addcheckbox(e){UI.AddCheckbox(e)}var Checkboxbool=[],CheckboxParams=[],CheckboxXParams=[],CheckboxLocX=[],CheckboxlocY=[],CheckboxLabels=[],CheckboxRow=[],CheckboxAmmount=0,Draw_Callbacks=[],CreateMove_Callbacks=[],MenuElementSize=0,MenuElementType=[],MenuElementID=[];function Callback(e,n){0==e?Draw_Callbacks.push(n):1==e&&CreateMove_Callbacks.push(n)}function DrawCallback(){for(var e=0;e<Draw_Callbacks.length;e++)Draw_Callbacks[e]()}function CreateMoveCallback(){for(var e=0;e<CreateMove_Callbacks.length;e++)CreateMove_Callbacks[e]()}function GetMenuValue(e){return UI.GetValue("Script items",e)}function SetMenuValue(e,n){UI.SetValue("Script items",e,n),UpdateCheckboxState(e,n)}function CreateCheckbox(e,n,o){Checkboxbool.push(n),n?CheckboxXParams.push(21):CheckboxXParams.push(3),CheckboxLabels.push(e),CheckboxRow.push(o),UI.AddCheckbox(e),UI.SetEnabled("Script items",e,!1),MenuElementSize++,MenuElementType.push(1),MenuElementID.push(Checkboxbool.length-1)}Global.RegisterCallback("Draw","DrawCallback"),Global.RegisterCallback("CreateMove","CreateMoveCallback");var LabelLabel=[],LabelRow=[];function CreateLabel(e,n){LabelLabel.push(e),MenuElementSize++,MenuElementType.push(0),MenuElementID.push(LabelLabel.length-1),LabelRow.push(n)}function DrawLabel(e,n,o){var l=Render.AddFont("Segoe UI Regular",13,600);Render.StringCustom(e,n-8,0,o,[255,255,255,255],l)}var SliderLabels=[],SliderMin=[],SliderMax=[],SliderValue=[],SliderXx=[],SliderRows=[];function Difference(e,n){return n<e?e-n:n-e}function CreateSlider(e,n,o,l,r){SliderLabels.push(e),SliderMin.push(n),SliderMax.push(o),SliderValue.push(l),MenuElementID.push(SliderLabels.length-1),MenuElementSize++,MenuElementType.push(2),SliderXx.push(0),SliderRows.push(r)}function Clamp(e,n,o){return e<n?n:o<e?o:val}function DrawSlider(e,n,o,l){var r=Render.AddFont("Segoe UI Regular",13,600);Render.StringCustom(e,n-7,0,o,[255,255,255,255],r);o=Render.TextSizeCustom(o,r);Render.FilledRect(e+20+o[0],n-3,200-o[0],10,[20,35,48,255]);r=200-o[0],Difference(SliderMin[l],SliderMax[l]);Render.FilledCircle(e+20+o[0]+SliderXx[l],n+1,10,[52,100,235,255]),UI.IsMenuOpen()&&Input.IsKeyPressed(1)&&(e=Global.GetCursorPosition(),Clicked_Event(e,20+o[0]+SliderXx[l]-9,n-9,20+o[0]+SliderXx[l]+9,n+9)?(MovableMenu(!1),SliderXx[l]=e[0]-100):MovableMenu(!0))}function LoadFromConfig(){UpdateAllCheckbox()}function CheckboxCallback(e,n){for(var o=0;o<MenuElementSize;o++)0==MenuElementType[o]?DrawLabel(e+20+260*LabelRow[MenuElementID[o]],n+20+33*o,LabelLabel[MenuElementID[o]]):1==MenuElementType[o]?UpdateCheckbox(e+20+260*CheckboxRow[MenuElementID[o]],n+20+33*o,CheckboxLabels[MenuElementID[o]],MenuElementID[o]):MenuElementType[o]}function UpdateAllCheckbox(){for(var e=0;e<CheckboxLabels.length;e++)Checkboxbool[e]=GetMenuValue(CheckboxLabels[e])}function UpdateCheckboxState(e,n){for(var o=0;o<CheckboxLabels.length;o++)CheckboxLabels[o]==e&&(Checkboxbool[o]=n)}function UpdateCheckbox(e,n,o,l){var r=Render.AddFont("Segoe UI Regular",13,600);Render.StringCustom(e,n-8,0,o,[255,255,255,255],r),e+=190,Render.FilledCircle(e,n,8,[20,35,48,255]),Render.FilledCircle(e+6,n,8,[20,35,48,255]),Render.FilledCircle(e+12,n,8,[20,35,48,255]),Render.FilledCircle(e+18,n,8,[20,35,48,255]),Render.FilledCircle(e+24,n,8,[20,35,48,255]),Checkboxbool[l]?Render.FilledCircle(e+CheckboxXParams[l],n,10,[52,100,235,255]):Render.FilledCircle(e+CheckboxXParams[l],n,10,[66,77,87,255]),CheckboxXParams[l]<17&&Checkboxbool[l]?CheckboxXParams[l]+=3:CheckboxXParams[l]<21&&Checkboxbool[l]?CheckboxXParams[l]++:7<CheckboxXParams[l]&&!Checkboxbool[l]?CheckboxXParams[l]-=3:3<CheckboxXParams[l]&&!Checkboxbool[l]&&CheckboxXParams[l]--,UI.IsMenuOpen()&&Input.IsKeyPressed(1)?(r=Global.GetCursorPosition(),Clicked_Event(r,e-8,n-8,e+24+8,n+8)&&!CheckboxParams[l]&&(Checkboxbool[l]=!Checkboxbool[l],setvalue(o,Checkboxbool[l]),CheckboxParams[l]=!0)):!Input.IsKeyPressed(1)&&CheckboxParams[l]&&(CheckboxParams[l]=!1)}var stored=!1,x_offs=0,y_offs=0,X=0,Y=0,MenuSize=270,MenuSize2=140;const in_bounds=function(e,n,o,l,r){return e[0]>n&&e[1]>o&&e[0]<l&&e[1]<r};function SetMenuSize(e,n){MenuSize=e,MenuSize2=n}function GetMenuSize(){return[MenuSize,MenuSize2]}function SetMenuLocation(e,n){X=e,Y=n}function GetMenuLocation(){return[X,Y]}var Movable=!0;function MovableMenu(e){Movable=e}_MouseDown=!1;var Events={MouseDown:0,MouseUp:1},menu={GetEvent:function(e){return 0==e?_MouseDown:1!=e&&void 0}},pi=3.141592653589793;function distance2radius(e){return e*(pi/180)}function D3DX3CF(e,n,o,l,r,a,t,i,u){var c,b;for(r=-1<(r=r<361&&r||360)&&r||0,rot=a+=1;rot<r+a+1;rot+=30*a){rot_r=distance2radius(rot),line_x=l*Math.cos(rot_r)+e,line_y=l*Math.sin(rot_r)+n;var s=Render.WorldToScreen([line_x,line_y,o]),d=(Render.WorldToScreen([e,n,o]),Render.WorldToScreen([e,n,o]));null!=d[0]&&null!=s[0]&&null!=c&&i&&Render.Polygon([[s[0],s[1]],[c,b],[d[0],d[1]]],u),c=s[0],b=s[1]}}var Draw={Screen:{Circle:function(e,n,o,l){Render.Circle(e,n,o,l)},Rectangle:function(e,n,o,l,r,a){for(var t=0;t<r;t++)Render.Line(e+t,n+t,e+t,n+l+t,a),Render.Line(e+t,n+t,e+o+t,n+t,a),Render.Line(e+o+t,n,e+o+t,n+l+t,a),Render.Line(e+t,n+l+t,e+o+t,n+l+t,a)},TriangleFilled:function(e,n,o,l,r,a,t){var i=a/90*o,a=a/90*l,r=r/180*o;Render.Polygon([[e,n+l-a],[e+o/2+i+r,n],[e+o-i,n+l]],t)},RectangleFilled:function(e,n,o,l,r){Render.FilledRect(x,n,o,l,r)},CircleFilled:function(e,n,o,l){Render.FilledCircle(x,n,o,l)},Arc:function(e,n,o,l,r,a,t){for(var i=2*Math.PI/300,u=o-a,c=(l+r)*(Math.PI/180),l=l*Math.PI/180;u<o;--o)for(var b=l;b<c;b+=i){var s=Math.round(e+o*Math.cos(b)),d=Math.round(n+o*Math.sin(b)),C=Math.round(e+o*Math.cos(b+i)),h=Math.round(n+o*Math.sin(b+i));Render.Line(s,d,C,h,t)}}},World:{CircleFilled3D:function(e,n,o,l,r){D3DX3CF(e,n,o,l,360,0,r,!0,r)}}};function DrawAPI(){var e;UI.IsMenuOpen()&&(Menu(X,Y,MenuSize,MenuSize2),CheckboxCallback(X,Y),Input.IsKeyPressed(1)?(e=Global.GetCursorPosition(),in_bounds(e,X,Y,X+MenuSize,Y+MenuSize2)&&Movable&&(_MouseDown=!0,stored||(x_offs=e[0]-X,y_offs=e[1]-Y,stored=!0),X=e[0]-x_offs,Y=e[1]-y_offs)):_MouseDown=!!stored&&(stored=!1))}Callback(0,DrawAPI);
